{"ast":null,"code":"var _jsxFileName = \"/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Make sure this points to your actual Map component\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleMapClick = async event => {\n    setLoading(true);\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      location: {\n        lat,\n        lng\n      }\n    }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          try {\n            const response = await fetch(`https://restcountries.com/v3.1/name/${countryComponent.long_name}`);\n            const data = await response.json();\n            const countryData = data[0];\n            setCountryInfo({\n              country: countryData.name.common,\n              flag: countryData.flags.svg,\n              population: countryData.population,\n              flagDescription: `The flag of ${countryData.name.common}.`\n            });\n          } catch (error) {\n            console.error('Failed to fetch country data', error);\n          }\n        } else {\n          console.log('No country found at this location');\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n      }\n      setLoading(false);\n    });\n  };\n\n  // ... (styling objects)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: titleStyle,\n      children: \"Country Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click anywhere on the map to see the country name, flag, and population.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapHolder\",\n      style: mapHolderStyle,\n      children: [/*#__PURE__*/_jsxDEV(MapComponent, {\n        onClick: handleMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        style: spinnerStyle,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : countryInfo && /*#__PURE__*/_jsxDEV(Card, {\n        style: cardStyle,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            style: cardTextStyle,\n            children: countryInfo.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            style: cardTextStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: countryInfo.flag,\n              alt: countryInfo.flagDescription || `Flag of ${countryInfo.country}`,\n              style: {\n                height: '100px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Population:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), \" \", countryInfo.population.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tsTyqBhR0aJIZljrEzeq3RvYlCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapComponent","Card","Spinner","jsxDEV","_jsxDEV","App","_s","countryInfo","setCountryInfo","loading","setLoading","handleMapClick","event","lat","latLng","lng","geocoder","window","google","maps","Geocoder","geocode","location","results","status","addressComponents","address_components","countryComponent","find","component","types","includes","response","fetch","long_name","data","json","countryData","country","name","common","flag","flags","svg","population","flagDescription","error","console","log","className","style","appStyle","children","titleStyle","fileName","_jsxFileName","lineNumber","columnNumber","mapHolderStyle","onClick","animation","role","spinnerStyle","cardStyle","Body","Title","cardTextStyle","Text","src","alt","height","margin","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Make sure this points to your actual Map component\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\n\nfunction App() {\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleMapClick = async (event) => {\n    setLoading(true);\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ location: { lat, lng } }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component =>\n          component.types.includes('country')\n        );\n        if (countryComponent) {\n          try {\n            const response = await fetch(`https://restcountries.com/v3.1/name/${countryComponent.long_name}`);\n            const data = await response.json();\n            const countryData = data[0];\n            setCountryInfo({\n              country: countryData.name.common,\n              flag: countryData.flags.svg,\n              population: countryData.population,\n              flagDescription: `The flag of ${countryData.name.common}.`\n            });\n          } catch (error) {\n            console.error('Failed to fetch country data', error);\n          }\n        } else {\n          console.log('No country found at this location');\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n      }\n      setLoading(false);\n    });\n  };\n\n  // ... (styling objects)\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <h1 style={titleStyle}>Country Information</h1>\n      <p>Click anywhere on the map to see the country name, flag, and population.</p>\n      <div className='mapHolder' style={mapHolderStyle}>\n        <MapComponent onClick={handleMapClick} />\n        {loading ? (\n          <Spinner animation=\"border\" role=\"status\" style={spinnerStyle}>\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        ) : (\n          countryInfo && (\n            <Card style={cardStyle}>\n              <Card.Body>\n                <Card.Title style={cardTextStyle}>{countryInfo.country}</Card.Title>\n                <Card.Text style={cardTextStyle}>\n                  <img \n                    src={countryInfo.flag} \n                    alt={countryInfo.flagDescription || `Flag of ${countryInfo.country}`} \n                    style={{ height: '100px', margin: '10px 0' }} \n                  />\n                  <br />\n                  <span>Population:</span> {countryInfo.population.toLocaleString()}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}