{"ast":null,"code":"var _jsxFileName = \"/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/CountryFlag.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryFlag({\n  country\n}) {\n  _s();\n  const [flagUrl, setFlagUrl] = useState('');\n  useEffect(() => {\n    if (country) {\n      fetch(`https://restcountries.com/v3.1/name/${country}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        const flag = data[0].flags.svg; // Getting SVG flag image\n        setFlagUrl(flag);\n      }).catch(error => console.error('Error fetching country data:', error));\n    }\n  }, [country]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: flagUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: flagUrl,\n      alt: `${country} flag`,\n      className: \"img-fluid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No flag available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 88\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CountryFlag, \"7LPCu/qTjgBftt4dezXHZEv/pJ4=\");\n_c = CountryFlag;\nexport default CountryFlag;\nvar _c;\n$RefreshReg$(_c, \"CountryFlag\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountryFlag","country","_s","flagUrl","setFlagUrl","fetch","then","response","ok","Error","json","data","flag","flags","svg","catch","error","console","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/CountryFlag.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CountryFlag({ country }) {\n  const [flagUrl, setFlagUrl] = useState('');\n\n  useEffect(() => {\n    if (country) {\n      fetch(`https://restcountries.com/v3.1/name/${country}`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          const flag = data[0].flags.svg; // Getting SVG flag image\n          setFlagUrl(flag);\n        })\n        .catch(error => console.error('Error fetching country data:', error));\n    }\n  }, [country]);\n\n  return (\n    <div>\n      {flagUrl ? <img src={flagUrl} alt={`${country} flag`} className=\"img-fluid\" /> : <p>No flag available</p>}\n    </div>\n  );\n}\n\nexport default CountryFlag;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAII,OAAO,EAAE;MACXI,KAAK,CAAE,uCAAsCJ,OAAQ,EAAC,CAAC,CACpDK,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACZ,MAAMC,IAAI,GAAGD,IAAI,CAAC,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,CAAC,CAAC;QAChCV,UAAU,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,CAACf,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAmB,QAAA,EACGf,OAAO,gBAAGJ,OAAA;MAAKoB,GAAG,EAAEhB,OAAQ;MAACiB,GAAG,EAAG,GAAEnB,OAAQ,OAAO;MAACoB,SAAS,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG1B,OAAA;MAAAmB,QAAA,EAAG;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtG,CAAC;AAEV;AAACvB,EAAA,CAzBQF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA2BpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}