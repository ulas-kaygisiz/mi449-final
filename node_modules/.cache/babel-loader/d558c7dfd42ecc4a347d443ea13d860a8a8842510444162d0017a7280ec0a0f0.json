{"ast":null,"code":"import React,{useState}from'react';import MapComponent from'./MapComponent';import'bootstrap/dist/css/bootstrap.min.css';import{Card,Spinner}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[countryInfo,setCountryInfo]=useState(null);const[loading,setLoading]=useState(false);const[hoverStyle,setHoverStyle]=useState({});const[error,setError]=useState('');const handleMapClick=async event=>{setLoading(true);setError('');const lat=event.latLng.lat();const lng=event.latLng.lng();const geocoder=new window.google.maps.Geocoder();geocoder.geocode({location:{lat,lng}},async(results,status)=>{if(status==='OK'){const addressComponents=results[0].address_components;const countryComponent=addressComponents.find(component=>component.types.includes('country'));if(countryComponent){const country=countryComponent.long_name;fetch(\"https://restcountries.com/v3.1/name/\".concat(country)).then(response=>response.json()).then(data=>{const countryData=data[0];setCountryInfo({country:countryData.name.common,flag:countryData.flags.svg,population:countryData.population,flagDescription:countryData.flags.alt});}).catch(error=>{console.error('Failed to fetch country data',error);setError('Failed to fetch country information, please try clicking somewhere else.');setCountryInfo(null);}).finally(()=>setLoading(false));}else{setError('No country found at this location, please click somewhere else.');setCountryInfo(null);setLoading(false);}}else{console.error('Geocoder failed due to: '+status);setError('Geocoder error. Please try again.');setCountryInfo(null);setLoading(false);}});};// styling for 3D visual effect\nconst cardHoverEnter=()=>{setHoverStyle({transform:'translateY(-10px) scale(1.05)',boxShadow:'0 20px 40px rgba(0,0,0,0.15)'});};const cardHoverLeave=()=>{setHoverStyle({});};const appStyle={textAlign:'center',backgroundColor:'#6B7FD7',minHeight:'100vh',paddingTop:'5vh'};const titleStyle={color:'#DDFBD2',marginBottom:'1vh'};const mapHolderStyle={display:'flex',flexDirection:'column',alignItems:'center',paddingBottom:'3vh'};const cardStyle={width:'60vw',backgroundColor:'#9448BC',marginTop:'3vh',textAlign:'center',boxShadow:'0 4px 8px rgba(0,0,0,0.25)',borderColor:'#4C2A85'};const cardTextStyle={fontSize:'1.25em',color:'#fff'};const spinnerStyle={color:'#DDFBD2',marginTop:'3vh'};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:appStyle,children:[/*#__PURE__*/_jsx(\"h1\",{style:titleStyle,children:\"Country Information\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click anywhere on the map to see the country name, flag information, and population.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mapHolder\",style:mapHolderStyle,children:[/*#__PURE__*/_jsx(MapComponent,{onClick:handleMapClick}),loading?/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",style:spinnerStyle,children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}):error?/*#__PURE__*/_jsx(Card,{style:cardStyle,children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Card.Text,{style:cardTextStyle,children:error})})}):countryInfo&&/*#__PURE__*/_jsx(Card,{style:{...cardStyle,...hoverStyle},onMouseEnter:cardHoverEnter,onMouseLeave:cardHoverLeave,children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{style:cardTextStyle,children:countryInfo.country}),/*#__PURE__*/_jsxs(Card.Text,{style:cardTextStyle,children:[/*#__PURE__*/_jsx(\"img\",{src:countryInfo.flag,alt:\"Flag of \".concat(countryInfo.country),style:{height:'100px'}}),/*#__PURE__*/_jsx(\"br\",{}),\"Population: \",countryInfo.population.toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:countryInfo.flagDescription})]})]})})]})]});}export default App;","map":{"version":3,"names":["React","useState","MapComponent","Card","Spinner","jsx","_jsx","jsxs","_jsxs","App","countryInfo","setCountryInfo","loading","setLoading","hoverStyle","setHoverStyle","error","setError","handleMapClick","event","lat","latLng","lng","geocoder","window","google","maps","Geocoder","geocode","location","results","status","addressComponents","address_components","countryComponent","find","component","types","includes","country","long_name","fetch","concat","then","response","json","data","countryData","name","common","flag","flags","svg","population","flagDescription","alt","catch","console","finally","cardHoverEnter","transform","boxShadow","cardHoverLeave","appStyle","textAlign","backgroundColor","minHeight","paddingTop","titleStyle","color","marginBottom","mapHolderStyle","display","flexDirection","alignItems","paddingBottom","cardStyle","width","marginTop","borderColor","cardTextStyle","fontSize","spinnerStyle","className","style","children","onClick","animation","role","Body","Text","onMouseEnter","onMouseLeave","Title","src","height","toLocaleString"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MapComponent from './MapComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\n\nfunction App() {\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [hoverStyle, setHoverStyle] = useState({});\n  const [error, setError] = useState('');\n\n  const handleMapClick = async (event) => {\n    setLoading(true);\n    setError('');\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ location: { lat, lng } }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          const country = countryComponent.long_name;\n          fetch(`https://restcountries.com/v3.1/name/${country}`)\n            .then(response => response.json())\n            .then(data => {\n              const countryData = data[0];\n              setCountryInfo({\n                country: countryData.name.common,\n                flag: countryData.flags.svg,\n                population: countryData.population,\n                flagDescription: countryData.flags.alt\n              });\n            })\n            .catch(error => {\n              console.error('Failed to fetch country data', error);\n              setError('Failed to fetch country information, please try clicking somewhere else.');\n              setCountryInfo(null);\n            })\n            .finally(() => setLoading(false));\n        } else {\n          setError('No country found at this location, please click somewhere else.');\n          setCountryInfo(null);\n          setLoading(false);\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setError('Geocoder error. Please try again.');\n        setCountryInfo(null);\n        setLoading(false);\n      }\n    });\n  };\n\n  // styling for 3D visual effect\n  const cardHoverEnter = () => {\n    setHoverStyle({\n      transform: 'translateY(-10px) scale(1.05)',\n      boxShadow: '0 20px 40px rgba(0,0,0,0.15)'\n    });\n  };\n\n  const cardHoverLeave = () => {\n    setHoverStyle({});\n  };\n\n  const appStyle = {\n    textAlign: 'center',\n    backgroundColor: '#6B7FD7', \n    minHeight: '100vh',\n    paddingTop: '5vh',\n  };\n\n  const titleStyle = {\n    color: '#DDFBD2', \n    marginBottom: '1vh'\n  };\n\n  const mapHolderStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingBottom: '3vh'\n  };\n\n  const cardStyle = {\n    width: '60vw',\n    backgroundColor: '#9448BC', \n    marginTop: '3vh',\n    textAlign: 'center',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n    borderColor: '#4C2A85' \n  };\n\n  const cardTextStyle = {\n    fontSize: '1.25em',\n    color: '#fff',\n  };\n\n  const spinnerStyle = {\n    color: '#DDFBD2', \n    marginTop: '3vh'\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <h1 style={titleStyle}>Country Information</h1>\n      <p>Click anywhere on the map to see the country name, flag information, and population.</p>\n      <div className='mapHolder' style={mapHolderStyle}>\n        <MapComponent onClick={handleMapClick} />\n        {loading ? (\n          <Spinner animation=\"border\" role=\"status\" style={spinnerStyle}>\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        ) : error ? (\n          <Card style={cardStyle}>\n            <Card.Body>\n              <Card.Text style={cardTextStyle}>\n                {error}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        ) : countryInfo && (\n          <Card style={{...cardStyle, ...hoverStyle}}\n                onMouseEnter={cardHoverEnter}\n                onMouseLeave={cardHoverLeave}>\n            <Card.Body>\n              <Card.Title style={cardTextStyle}>{countryInfo.country}</Card.Title>\n              <Card.Text style={cardTextStyle}>\n                <img src={countryInfo.flag} alt={`Flag of ${countryInfo.country}`} style={{ height: '100px' }} />\n                <br />\n                Population: {countryInfo.population.toLocaleString()}\n                <br />\n                <small>{countryInfo.flagDescription}</small>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}