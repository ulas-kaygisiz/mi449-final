{"ast":null,"code":"var _jsxFileName = \"/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Adjust this path to where your MapComponent is\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleMapClick = async event => {\n    setLoading(true);\n    setError(''); // Clear previous errors\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      location: {\n        lat,\n        lng\n      }\n    }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          const country = countryComponent.long_name;\n          fetch(`https://restcountries.com/v3.1/name/${country}`).then(response => response.json()).then(data => {\n            const countryData = data[0];\n            setCountryInfo({\n              country: countryData.name.common,\n              flag: countryData.flags.svg,\n              population: countryData.population,\n              flagDescription: countryData.flags.alt\n            });\n            setError(''); // Clear any error if the fetch is successful\n          }).catch(error => {\n            console.error('Failed to fetch country data', error);\n            setError('Failed to fetch country information, please try clicking somewhere else.');\n            setCountryInfo(null); // Clear previous country information\n          }).finally(() => setLoading(false));\n        } else {\n          setError('No country found at this location, please click somewhere else.');\n          setCountryInfo(null); // Clear previous country information\n          setLoading(false);\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setError('Geocoder error. Please try again.');\n        setCountryInfo(null); // Clear previous country information\n        setLoading(false);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: titleStyle,\n      children: \"Country Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click anywhere on the map to see the country name, flag information, and population.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapHolder\",\n      style: mapHolderStyle,\n      children: [/*#__PURE__*/_jsxDEV(MapComponent, {\n        onClick: handleMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        style: spinnerStyle,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Card, {\n        style: cardStyle,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            style: cardTextStyle,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : countryInfo && /*#__PURE__*/_jsxDEV(Card, {\n        style: cardStyle,\n        onMouseEnter: cardHoverEnter,\n        onMouseLeave: cardHoverLeave,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            style: cardTextStyle,\n            children: countryInfo.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            style: cardTextStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: countryInfo.flag,\n              alt: `Flag of ${countryInfo.country}`,\n              style: {\n                height: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), \"Population: \", countryInfo.population.toLocaleString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: countryInfo.flagDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l7vZhTlZeUQ8XNN5HzgP1VOyoao=\");\n_c = App;\nexport default App;\n\n// Styling Objects\nconst appStyle = {\n  textAlign: 'center',\n  backgroundColor: '#6B7FD7',\n  minHeight: '100vh',\n  paddingTop: '5vh'\n};\nconst titleStyle = {\n  color: '#DDFBD2',\n  marginBottom: '1vh'\n};\nconst mapHolderStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  paddingBottom: '3vh'\n};\nconst cardStyle = {\n  width: '60vw',\n  backgroundColor: '#9448BC',\n  marginTop: '3vh',\n  textAlign: 'center',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n  borderColor: '#4C2A85'\n};\nconst cardTextStyle = {\n  fontSize: '1.25em',\n  color: '#fff'\n};\nconst spinnerStyle = {\n  color: '#DDFBD2',\n  marginTop: '3vh'\n};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapComponent","Card","Spinner","jsxDEV","_jsxDEV","App","_s","countryInfo","setCountryInfo","loading","setLoading","error","setError","handleMapClick","event","lat","latLng","lng","geocoder","window","google","maps","Geocoder","geocode","location","results","status","addressComponents","address_components","countryComponent","find","component","types","includes","country","long_name","fetch","then","response","json","data","countryData","name","common","flag","flags","svg","population","flagDescription","alt","catch","console","finally","className","style","appStyle","children","titleStyle","fileName","_jsxFileName","lineNumber","columnNumber","mapHolderStyle","onClick","animation","role","spinnerStyle","cardStyle","Body","Text","cardTextStyle","onMouseEnter","cardHoverEnter","onMouseLeave","cardHoverLeave","Title","src","height","toLocaleString","_c","textAlign","backgroundColor","minHeight","paddingTop","color","marginBottom","display","flexDirection","alignItems","paddingBottom","width","marginTop","boxShadow","borderColor","fontSize","$RefreshReg$"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Adjust this path to where your MapComponent is\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\n\nfunction App() {\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleMapClick = async (event) => {\n    setLoading(true);\n    setError(''); // Clear previous errors\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ location: { lat, lng } }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          const country = countryComponent.long_name;\n          fetch(`https://restcountries.com/v3.1/name/${country}`)\n            .then(response => response.json())\n            .then(data => {\n              const countryData = data[0];\n              setCountryInfo({\n                country: countryData.name.common,\n                flag: countryData.flags.svg,\n                population: countryData.population,\n                flagDescription: countryData.flags.alt\n              });\n              setError(''); // Clear any error if the fetch is successful\n            })\n            .catch(error => {\n              console.error('Failed to fetch country data', error);\n              setError('Failed to fetch country information, please try clicking somewhere else.');\n              setCountryInfo(null); // Clear previous country information\n            })\n            .finally(() => setLoading(false));\n        } else {\n          setError('No country found at this location, please click somewhere else.');\n          setCountryInfo(null); // Clear previous country information\n          setLoading(false);\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setError('Geocoder error. Please try again.');\n        setCountryInfo(null); // Clear previous country information\n        setLoading(false);\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <h1 style={titleStyle}>Country Information</h1>\n      <p>Click anywhere on the map to see the country name, flag information, and population.</p>\n      <div className='mapHolder' style={mapHolderStyle}>\n        <MapComponent onClick={handleMapClick} />\n        {loading ? (\n          <Spinner animation=\"border\" role=\"status\" style={spinnerStyle}>\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        ) : error ? (\n          <Card style={cardStyle}>\n            <Card.Body>\n              <Card.Text style={cardTextStyle}>\n                {error}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        ) : countryInfo && (\n          <Card style={cardStyle}\n                onMouseEnter={cardHoverEnter}\n                onMouseLeave={cardHoverLeave}>\n            <Card.Body>\n              <Card.Title style={cardTextStyle}>{countryInfo.country}</Card.Title>\n              <Card.Text style={cardTextStyle}>\n                <img src={countryInfo.flag} alt={`Flag of ${countryInfo.country}`} style={{ height: '100px' }} />\n                <br />\n                Population: {countryInfo.population.toLocaleString()}\n                <br />\n                <small>{countryInfo.flagDescription}</small>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// Styling Objects\nconst appStyle = {\n  textAlign: 'center',\n  backgroundColor: '#6B7FD7', \n  minHeight: '100vh',\n  paddingTop: '5vh',\n};\n\nconst titleStyle = {\n  color: '#DDFBD2', \n  marginBottom: '1vh'\n};\n\nconst mapHolderStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  paddingBottom: '3vh'\n};\n\nconst cardStyle = {\n  width: '60vw',\n  backgroundColor: '#9448BC', \n  marginTop: '3vh',\n  textAlign: 'center',\n  boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n  borderColor: '#4C2A85' \n};\n\nconst cardTextStyle = {\n  fontSize: '1.25em',\n  color: '#fff',\n};\n\nconst spinnerStyle = {\n  color: '#DDFBD2', \n  marginTop: '3vh'\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAC3C,OAAO,sCAAsC;AAC7C,SAASC,IAAI,EAAEC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,MAAMG,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACD,GAAG,CAAC,CAAC;IAC9B,MAAME,GAAG,GAAGH,KAAK,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC;IAElDJ,QAAQ,CAACK,OAAO,CAAC;MAAEC,QAAQ,EAAE;QAAET,GAAG;QAAEE;MAAI;IAAE,CAAC,EAAE,OAAOQ,OAAO,EAAEC,MAAM,KAAK;MACtE,IAAIA,MAAM,KAAK,IAAI,EAAE;QACnB,MAAMC,iBAAiB,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,kBAAkB;QACvD,MAAMC,gBAAgB,GAAGF,iBAAiB,CAACG,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,KAAK,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjG,IAAIJ,gBAAgB,EAAE;UACpB,MAAMK,OAAO,GAAGL,gBAAgB,CAACM,SAAS;UAC1CC,KAAK,CAAE,uCAAsCF,OAAQ,EAAC,CAAC,CACpDG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;YACZ,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;YAC3BhC,cAAc,CAAC;cACb0B,OAAO,EAAEO,WAAW,CAACC,IAAI,CAACC,MAAM;cAChCC,IAAI,EAAEH,WAAW,CAACI,KAAK,CAACC,GAAG;cAC3BC,UAAU,EAAEN,WAAW,CAACM,UAAU;cAClCC,eAAe,EAAEP,WAAW,CAACI,KAAK,CAACI;YACrC,CAAC,CAAC;YACFrC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;UAChB,CAAC,CAAC,CACDsC,KAAK,CAACvC,KAAK,IAAI;YACdwC,OAAO,CAACxC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;YACpDC,QAAQ,CAAC,0EAA0E,CAAC;YACpFJ,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CACD4C,OAAO,CAAC,MAAM1C,UAAU,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC,MAAM;UACLE,QAAQ,CAAC,iEAAiE,CAAC;UAC3EJ,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;UACtBE,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,MAAM;QACLyC,OAAO,CAACxC,KAAK,CAAC,0BAA0B,GAAGe,MAAM,CAAC;QAClDd,QAAQ,CAAC,mCAAmC,CAAC;QAC7CJ,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACtBE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKiD,SAAS,EAAC,KAAK;IAACC,KAAK,EAAEC,QAAS;IAAAC,QAAA,gBACnCpD,OAAA;MAAIkD,KAAK,EAAEG,UAAW;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CzD,OAAA;MAAAoD,QAAA,EAAG;IAAoF;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3FzD,OAAA;MAAKiD,SAAS,EAAC,WAAW;MAACC,KAAK,EAAEQ,cAAe;MAAAN,QAAA,gBAC/CpD,OAAA,CAACJ,YAAY;QAAC+D,OAAO,EAAElD;MAAe;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxCpD,OAAO,gBACNL,OAAA,CAACF,OAAO;QAAC8D,SAAS,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAACX,KAAK,EAAEY,YAAa;QAAAV,QAAA,eAC5DpD,OAAA;UAAMiD,SAAS,EAAC,iBAAiB;UAAAG,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,GACRlD,KAAK,gBACPP,OAAA,CAACH,IAAI;QAACqD,KAAK,EAAEa,SAAU;QAAAX,QAAA,eACrBpD,OAAA,CAACH,IAAI,CAACmE,IAAI;UAAAZ,QAAA,eACRpD,OAAA,CAACH,IAAI,CAACoE,IAAI;YAACf,KAAK,EAAEgB,aAAc;YAAAd,QAAA,EAC7B7C;UAAK;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,GACLtD,WAAW,iBACbH,OAAA,CAACH,IAAI;QAACqD,KAAK,EAAEa,SAAU;QACjBI,YAAY,EAAEC,cAAe;QAC7BC,YAAY,EAAEC,cAAe;QAAAlB,QAAA,eACjCpD,OAAA,CAACH,IAAI,CAACmE,IAAI;UAAAZ,QAAA,gBACRpD,OAAA,CAACH,IAAI,CAAC0E,KAAK;YAACrB,KAAK,EAAEgB,aAAc;YAAAd,QAAA,EAAEjD,WAAW,CAAC2B;UAAO;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eACpEzD,OAAA,CAACH,IAAI,CAACoE,IAAI;YAACf,KAAK,EAAEgB,aAAc;YAAAd,QAAA,gBAC9BpD,OAAA;cAAKwE,GAAG,EAAErE,WAAW,CAACqC,IAAK;cAACK,GAAG,EAAG,WAAU1C,WAAW,CAAC2B,OAAQ,EAAE;cAACoB,KAAK,EAAE;gBAAEuB,MAAM,EAAE;cAAQ;YAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACjGzD,OAAA;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBACM,EAACtD,WAAW,CAACwC,UAAU,CAAC+B,cAAc,CAAC,CAAC,eACpD1E,OAAA;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNzD,OAAA;cAAAoD,QAAA,EAAQjD,WAAW,CAACyC;YAAe;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvD,EAAA,CAvFQD,GAAG;AAAA0E,EAAA,GAAH1E,GAAG;AAyFZ,eAAeA,GAAG;;AAElB;AACA,MAAMkD,QAAQ,GAAG;EACfyB,SAAS,EAAE,QAAQ;EACnBC,eAAe,EAAE,SAAS;EAC1BC,SAAS,EAAE,OAAO;EAClBC,UAAU,EAAE;AACd,CAAC;AAED,MAAM1B,UAAU,GAAG;EACjB2B,KAAK,EAAE,SAAS;EAChBC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMvB,cAAc,GAAG;EACrBwB,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE,QAAQ;EACpBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMtB,SAAS,GAAG;EAChBuB,KAAK,EAAE,MAAM;EACbT,eAAe,EAAE,SAAS;EAC1BU,SAAS,EAAE,KAAK;EAChBX,SAAS,EAAE,QAAQ;EACnBY,SAAS,EAAE,4BAA4B;EACvCC,WAAW,EAAE;AACf,CAAC;AAED,MAAMvB,aAAa,GAAG;EACpBwB,QAAQ,EAAE,QAAQ;EAClBV,KAAK,EAAE;AACT,CAAC;AAED,MAAMlB,YAAY,GAAG;EACnBkB,KAAK,EAAE,SAAS;EAChBO,SAAS,EAAE;AACb,CAAC;AAAC,IAAAZ,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}