{"ast":null,"code":"var _jsxFileName = \"/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/MapComponent.js\";\nimport React from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nconst center = {\n  lat: -34.397,\n  lng: 150.644\n};\nfunction MapComponent({\n  setCountry\n}) {\n  const handleMapClick = async event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    // Here you would typically use a reverse geocoding API to get the country name\n    // from the coordinates, but for simplicity, let's assume you obtain it somehow.\n    // Then, you call `setCountry(countryName);`\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_API_KEY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 8,\n      onClick: handleMapClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MapComponent","setCountry","handleMapClick","event","latLng","googleMapsApiKey","children","mapContainerStyle","zoom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/MapComponent.js"],"sourcesContent":["import React from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: '800px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -34.397,\n  lng: 150.644\n};\n\nfunction MapComponent({ setCountry }) {\n  const handleMapClick = async (event) => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    // Here you would typically use a reverse geocoding API to get the country name\n    // from the coordinates, but for simplicity, let's assume you obtain it somehow.\n    // Then, you call `setCountry(countryName);`\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"YOUR_API_KEY\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={8}\n        onClick={handleMapClick}\n      >\n        {/* Child components, like markers or shapes */}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,MAAM;EACZC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,YAAYA,CAAC;EAAEC;AAAW,CAAC,EAAE;EACpC,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,MAAML,GAAG,GAAGK,KAAK,CAACC,MAAM,CAACN,GAAG,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAGI,KAAK,CAACC,MAAM,CAACL,GAAG,CAAC,CAAC;IAC9B;IACA;IACA;EACF,CAAC;EAED,oBACEN,OAAA,CAACH,UAAU;IAACe,gBAAgB,EAAC,cAAc;IAAAC,QAAA,eACzCb,OAAA,CAACJ,SAAS;MACRkB,iBAAiB,EAAEb,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACfW,IAAI,EAAE,CAAE;MACRC,OAAO,EAAEP;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAACC,EAAA,GArBQd,YAAY;AAuBrB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}