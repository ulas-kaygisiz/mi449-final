{"ast":null,"code":"var _jsxFileName = \"/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Make sure to replace with your actual import path\nimport CountryFlag from './CountryFlag'; // Make sure to replace with your actual import path\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleMapClick = async event => {\n    setLoading(true);\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      location: {\n        lat,\n        lng\n      }\n    }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          setCountryInfo({\n            country: countryComponent.long_name\n          });\n        } else {\n          console.log('No country found at this location');\n        }\n        setLoading(false);\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setLoading(false);\n      }\n    });\n  };\n  const appStyle = {\n    textAlign: 'center',\n    backgroundColor: '#DDFBD2',\n    // Use the color from your palette\n    minHeight: '100vh',\n    paddingTop: '5vh'\n  };\n  const mapHolderStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingBottom: '3vh'\n  };\n  const cardStyle = {\n    width: '60vw',\n    backgroundColor: '#BCEDF6',\n    // Use the color from your palette\n    marginTop: '3vh',\n    textAlign: 'center',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n    borderColor: '#6B7FD7' // Use the color from your palette\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#320E3B'\n      },\n      children: \"Country Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click anywhere on the map to see the country name and flag.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapHolder\",\n      style: mapHolderStyle,\n      children: [/*#__PURE__*/_jsxDEV(MapComponent, {\n        onClick: handleMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        style: {\n          color: '#6B7FD7',\n          marginTop: '3vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : countryInfo && /*#__PURE__*/_jsxDEV(Card, {\n        style: cardStyle,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            style: {\n              color: '#4C2A85'\n            },\n            children: countryInfo.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CountryFlag, {\n            country: countryInfo.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tsTyqBhR0aJIZljrEzeq3RvYlCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapComponent","CountryFlag","Card","Spinner","jsxDEV","_jsxDEV","App","_s","countryInfo","setCountryInfo","loading","setLoading","handleMapClick","event","lat","latLng","lng","geocoder","window","google","maps","Geocoder","geocode","location","results","status","addressComponents","address_components","countryComponent","find","component","types","includes","country","long_name","console","log","error","appStyle","textAlign","backgroundColor","minHeight","paddingTop","mapHolderStyle","display","flexDirection","alignItems","paddingBottom","cardStyle","width","marginTop","boxShadow","borderColor","className","style","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","animation","role","Body","Title","_c","$RefreshReg$"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Make sure to replace with your actual import path\nimport CountryFlag from './CountryFlag'; // Make sure to replace with your actual import path\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\n\nfunction App() {\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleMapClick = async (event) => {\n    setLoading(true);\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ location: { lat, lng } }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component =>\n          component.types.includes('country')\n        );\n        if (countryComponent) {\n          setCountryInfo({ country: countryComponent.long_name });\n        } else {\n          console.log('No country found at this location');\n        }\n        setLoading(false);\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setLoading(false);\n      }\n    });\n  };\n\n  const appStyle = {\n    textAlign: 'center',\n    backgroundColor: '#DDFBD2', // Use the color from your palette\n    minHeight: '100vh',\n    paddingTop: '5vh'\n  };\n\n  const mapHolderStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingBottom: '3vh'\n  };\n\n  const cardStyle = {\n    width: '60vw',\n    backgroundColor: '#BCEDF6', // Use the color from your palette\n    marginTop: '3vh',\n    textAlign: 'center',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n    borderColor: '#6B7FD7' // Use the color from your palette\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <h1 style={{ color: '#320E3B' }}>Country Information</h1>\n      <p>Click anywhere on the map to see the country name and flag.</p>\n      <div className='mapHolder' style={mapHolderStyle}>\n        <MapComponent onClick={handleMapClick} />\n        {loading ? (\n          <Spinner animation=\"border\" role=\"status\" style={{ color: '#6B7FD7', marginTop: '3vh' }}>\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        ) : (\n          countryInfo && (\n            <Card style={cardStyle}>\n              <Card.Body>\n                <Card.Title style={{ color: '#4C2A85' }}>{countryInfo.country}</Card.Title>\n                <CountryFlag country={countryInfo.country} />\n              </Card.Body>\n            </Card>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}