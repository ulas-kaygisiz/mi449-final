{"ast":null,"code":"var _jsxFileName = \"/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Adjust this path to where your MapComponent is\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [hoverStyle, setHoverStyle] = useState({});\n  const handleMapClick = async event => {\n    setLoading(true);\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      location: {\n        lat,\n        lng\n      }\n    }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          const country = countryComponent.long_name;\n          fetch(`https://restcountries.com/v3.1/name/${country}`).then(response => response.json()).then(data => {\n            const countryData = data[0];\n            setCountryInfo({\n              country: countryData.name.common,\n              flag: countryData.flags.svg,\n              population: countryData.population,\n              flagDescription: countryData.flags.alt\n            });\n          }).catch(error => {\n            console.error('Failed to fetch country data', error);\n          }).finally(() => setLoading(false));\n        } else {\n          console.log('No country found at this location');\n          setLoading(false);\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setLoading(false);\n      }\n    });\n  };\n\n  // \n  const cardHoverEnter = () => {\n    setHoverStyle({\n      transform: 'translateY(-10px) scale(1.05)',\n      boxShadow: '0 20px 40px rgba(0,0,0,0.15)'\n    });\n  };\n  const cardHoverLeave = () => {\n    setHoverStyle({});\n  };\n  const appStyle = {\n    textAlign: 'center',\n    backgroundColor: '#6B7FD7',\n    minHeight: '100vh',\n    paddingTop: '5vh'\n  };\n  const titleStyle = {\n    color: '#DDFBD2',\n    marginBottom: '1vh'\n  };\n  const mapHolderStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingBottom: '3vh'\n  };\n  const cardStyle = {\n    width: '60vw',\n    backgroundColor: '#9448BC',\n    marginTop: '3vh',\n    textAlign: 'center',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n    borderColor: '#4C2A85'\n  };\n  const cardTextStyle = {\n    fontSize: '1.25em',\n    color: '#fff'\n  };\n  const spinnerStyle = {\n    color: '#DDFBD2',\n    marginTop: '3vh'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: titleStyle,\n      children: \"Country Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click anywhere on the map to see the country name, flag information, and population.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapHolder\",\n      style: mapHolderStyle,\n      children: [/*#__PURE__*/_jsxDEV(MapComponent, {\n        onClick: handleMapClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        style: spinnerStyle,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : countryInfo && /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          ...cardStyle,\n          ...hoverStyle\n        },\n        onMouseEnter: cardHoverEnter,\n        onMouseLeave: cardHoverLeave,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            style: cardTextStyle,\n            children: countryInfo.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            style: cardTextStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: countryInfo.flag,\n              alt: `Flag of ${countryInfo.country}`,\n              style: {\n                height: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), \"Population: \", countryInfo.population.toLocaleString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: countryInfo.flagDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sTJi86jU1DpTlZ8X8YEUbx84fXM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapComponent","Card","Spinner","jsxDEV","_jsxDEV","App","_s","countryInfo","setCountryInfo","loading","setLoading","hoverStyle","setHoverStyle","handleMapClick","event","lat","latLng","lng","geocoder","window","google","maps","Geocoder","geocode","location","results","status","addressComponents","address_components","countryComponent","find","component","types","includes","country","long_name","fetch","then","response","json","data","countryData","name","common","flag","flags","svg","population","flagDescription","alt","catch","error","console","finally","log","cardHoverEnter","transform","boxShadow","cardHoverLeave","appStyle","textAlign","backgroundColor","minHeight","paddingTop","titleStyle","color","marginBottom","mapHolderStyle","display","flexDirection","alignItems","paddingBottom","cardStyle","width","marginTop","borderColor","cardTextStyle","fontSize","spinnerStyle","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","animation","role","onMouseEnter","onMouseLeave","Body","Title","Text","src","height","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/ulaskaygisiz/Desktop/MSU/SPRING24/MI449/mi449-final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MapComponent from './MapComponent'; // Adjust this path to where your MapComponent is\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Spinner } from 'react-bootstrap';\n\nfunction App() {\n  const [countryInfo, setCountryInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [hoverStyle, setHoverStyle] = useState({});\n\n  const handleMapClick = async (event) => {\n    setLoading(true);\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ location: { lat, lng } }, async (results, status) => {\n      if (status === 'OK') {\n        const addressComponents = results[0].address_components;\n        const countryComponent = addressComponents.find(component => component.types.includes('country'));\n        if (countryComponent) {\n          const country = countryComponent.long_name;\n          fetch(`https://restcountries.com/v3.1/name/${country}`)\n            .then(response => response.json())\n            .then(data => {\n              const countryData = data[0];\n              setCountryInfo({\n                country: countryData.name.common,\n                flag: countryData.flags.svg,\n                population: countryData.population,\n                flagDescription: countryData.flags.alt\n              });\n            })\n            .catch(error => {\n              console.error('Failed to fetch country data', error);\n            })\n            .finally(() => setLoading(false));\n        } else {\n          console.log('No country found at this location');\n          setLoading(false);\n        }\n      } else {\n        console.error('Geocoder failed due to: ' + status);\n        setLoading(false);\n      }\n    });\n  };\n\n  // \n  const cardHoverEnter = () => {\n    setHoverStyle({\n      transform: 'translateY(-10px) scale(1.05)',\n      boxShadow: '0 20px 40px rgba(0,0,0,0.15)'\n    });\n  };\n\n  const cardHoverLeave = () => {\n    setHoverStyle({});\n  };\n\n  const appStyle = {\n    textAlign: 'center',\n    backgroundColor: '#6B7FD7', \n    minHeight: '100vh',\n    paddingTop: '5vh',\n  };\n\n  const titleStyle = {\n    color: '#DDFBD2', \n    marginBottom: '1vh'\n  };\n\n  const mapHolderStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingBottom: '3vh'\n  };\n\n  const cardStyle = {\n    width: '60vw',\n    backgroundColor: '#9448BC', \n    marginTop: '3vh',\n    textAlign: 'center',\n    boxShadow: '0 4px 8px rgba(0,0,0,0.25)',\n    borderColor: '#4C2A85' \n  };\n\n  const cardTextStyle = {\n    fontSize: '1.25em',\n    color: '#fff',\n  };\n\n  const spinnerStyle = {\n    color: '#DDFBD2', \n    marginTop: '3vh'\n  };\n\n  return (\n    <div className=\"App\" style={appStyle}>\n      <h1 style={titleStyle}>Country Information</h1>\n      <p>Click anywhere on the map to see the country name, flag information, and population.</p>\n      <div className='mapHolder' style={mapHolderStyle}>\n        <MapComponent onClick={handleMapClick} />\n        {loading ? (\n          <Spinner animation=\"border\" role=\"status\" style={spinnerStyle}>\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        ) : (\n          countryInfo && (\n            <Card style={{...cardStyle, ...hoverStyle}}\n                  onMouseEnter={cardHoverEnter}\n                  onMouseLeave={cardHoverLeave}>\n              <Card.Body>\n                <Card.Title style={cardTextStyle}>{countryInfo.country}</Card.Title>\n                <Card.Text style={cardTextStyle}>\n                  <img src={countryInfo.flag} alt={`Flag of ${countryInfo.country}`} style={{ height: '100px' }} />\n                  <br />\n                  Population: {countryInfo.population.toLocaleString()}\n                  <br />\n                  <small>{countryInfo.flagDescription}</small>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}